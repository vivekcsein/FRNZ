generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userID    String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updateUt  DateTime @updatedAt
  Comment   Comment?
  Post      Post?
  profile   Profile?
}

model Profile {
  id        String    @id @default(uuid())
  username  String    @unique
  fullname  String
  gender    Gender    @default(UNSPECIFIED)
  age       Int?
  password  String
  profileID String    @unique
  createdAt DateTime  @default(now())
  updateUt  DateTime  @updatedAt
  Comment   Comment[]
  Post      Post[]
  User      User      @relation(fields: [profileID], references: [userID])
  roles     Role[]
}

model Role {
  id        String   @id @default(uuid())
  rolename  String?
  Roles     UserRole @default(DEFAULT)
  roleID    String
  createdAt DateTime @default(now())
  updateUt  DateTime @updatedAt
  Profile   Profile  @relation(fields: [roleID], references: [profileID])
}

model Post {
  postID        String    @id @default(uuid())
  title         String
  content       String?
  publishedDate DateTime  @default(now())
  updateUt      DateTime  @updatedAt
  authorUserID  String    @unique
  viewsCount    Int       @default(0)
  likesCount    Int       @default(0)
  rating        Float
  profileId     String?
  comments      Comment[]
  authorUser    User      @relation(fields: [authorUserID], references: [userID])
  Profile       Profile?  @relation(fields: [profileId], references: [id])
  tags          Tag[]     @relation("PostToTag")
}

model Comment {
  commentID    String   @id @default(uuid())
  text         String
  postedDate   DateTime @default(now())
  authorUserID String   @unique
  postID       String
  profileId    String?
  authorUser   User     @relation(fields: [authorUserID], references: [userID])
  post         Post     @relation(fields: [postID], references: [postID])
  Profile      Profile? @relation(fields: [profileId], references: [id])
}

model Tag {
  tagID String @id @default(uuid())
  name  String @unique
  posts Post[] @relation("PostToTag")
}

enum Gender {
  MALE        @map("male")
  FEMALE      @map("female")
  OTHER       @map("other")
  UNSPECIFIED @map("Unspecified")
  NON_BINARY  @map("non-binary")
}

enum UserRole {
  ADMIN     @map("admin")
  MODERATOR @map("moderator")
  USER      @map("user")
  DEFAULT   @map("default")
}
